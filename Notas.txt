Aqui voy a tomar las notas más importantes relacionadas con el curso: PowerBi - Modelado de datos con DAX

DAX: Data Analysis Expresions
	Solamente podemos trabajar con tablas o columnas, no es posible trabar con celdas únicas, como en Excel 

DAX nos permite trabaja con operadores matemáticos, lógicos o de cadena (string), 

NO ES RECOMENDABLE CREAR COLUMNAS CALCULADAS PARA EL DESGLOCE DE INFORMACION DE OTRAS COLUMNAS 
	EJEMPLO: Tenemos una columna fecha, y queremos sacar tanto el Año, mes Dia, para ello podemos crear una nueva columna en duplicado y filtrarlo por el Año Mes Dia, dependiendo. ESO ESTÁ MAl, Para ello podemos hacer la creacion de tablas midiante el uso de Dax. De la siguiente manera: 

CalendarioDAX = 
ADDCOLUMNS(
	CALENDAR(
	DATE (2021, 1, 1),
	DATE (2022, 12, 31)
	),
"AñoDAX", YEAR([Date]),
"MesDAX", FORMAT([Date], "mmmm"), 
"DiaDAX", FORMAT([Date], "dddd")
)


Como Nota interesante: Es mejor ordenar ti¿odas las columnas nuevas y Medidas dentro de una tabla nueva, que podemos crear desde nuestro TableView, a la izquierda

	Trabajo con Variables
Es posible hacer medidas en donde tengamos dentro a variables. Es necesario tener en cuenta las palabras claves VAR y RETURN
Ejemplo: 

Differencia importe con variables = 
    VAR vImporte = SUMX( Ventas, Ventas[Cantidades] * Ventas[Precios] ) 
    VAR vImporteCat = SUMX( Ventas, Ventas[Cantidades] * RELATED(Producto[Precio Catalogo]) )
RETURN
    vImporteCat - vImporte


Division por 0: En caso de que nosotros sepamos con certeza que el DIVISOR nunca va a ser =0, entonces podemos hacer uso de el operador barra "/", en caso de que exista un DIVISOR =0, El resultado sreá infinito, y causará problemas a la hora de representarlo. Ahora si queremos evitar esta situación, lo que podemos hacer es usar la función DIVIDE() ya que nos ayuda a controlar la division por 0


Datos en Blanco:
Para ello podemos hacer uso de
Nombre de Medida = [Columna1] + 0


	SENTIDO, Siempre va desde el lado Unico al lado Muchos -Mediante la configuración del modelo tabular es posible mantenerlo así, o lo podemos cambiar de acuerdo a nuestras necesidades haciendo que la relación tenga AMBOS sentidos. Click Secundario en la linea de relación - Propiedades - Relación del filtro Cruzado. Solo que es ineficiente 
	Para ello podemos hacer uso de DAX para crear una nueva medida de la siguiente manera

Clientes por productos = 
CALCULATE(
	[Cantidad clientes],
	CROSSFILTER(Ventas[IdCliente], Clientes[IdClientes], BOTH)
)


Contexto de filtros
Para hacer una medid con DAX y que la medida esté filtrada, tenemos que hacer uso de la function CALCULATE

CALCULATE( Expresión de Cálculo o Medida , (Opcionales) Son Expresiones de filtro que sirven para modificar el contexto de filtro externo en el que se evalua la medida )

Vaya, Sirve para que ese Visual no sea afectado por un filtro externo, Ej: 

Alemania = CALCULATE( [Cantidad], Clientes[Pais] = "Alemania" )
Esta medida se usa para mostrar el valor en una CARD, y tenemos dentro del reporte un Filtro que tiene la lista de los paises, en caso de que nosotros queramos hacer cambios dentro de este Ribbon no se verá efectuado ningun tipo de cambio a nuestra Card



Contexto de Fila //
Cuando quetemos que se hagan sumas teniendo en cuenta el orden por fila, es necesario ahcer uso igualmente de la function CALCULATE
Caso: Queremos hacer la suma de los valores que nos encontramos por cada Customer, tanto en OverPyament como en Underpayment para saber si el saldo es posit   ivo o negativo. 
Lo que podemos hacer es colocar esta expresión para logara esa suma
SumaCustomer = SUM( Tabla[Customer] ) //no 
hayq eu escribir la siguiente formula  
	Igualmente podria funcionar 



Otra forma de hacer filtros es con el uso de FILTER, pero esta funcion lo que hace es iterar entre la informacio despues de los filtros. Si nosotros usamos dentro del FILTER el argumento [Pais]="Alemania", y luego dentro de los Ribbons nosotros vamos a hacer el filtrado primero por [Pais]="Mexico", la medida nos va a dar BLANCO porque dentro de Mexico ya no encontramos los valores de ALEMANIA, entonces no sirve tan chido. Para ello devemos hacer uso de CALCULATE  y dar un filtro pero por contexto, que este filtro lo que hace es tener siempre presente el contexto que se le da. sin considerar el Ribborn externo exacto que modificaría ese valor. 



Cuando usamos CALCULATE para generar un filtro de informacion, es usual que los filtros externos no funcionen, es por ello que si queremos que los filtros externos aun funcionen por alguna razon, es necesario hacer uso de KEEPFILTERS. 
Caso: Importes Altos = CALCULATE(
	COUNTROWS(Ventas), 
	Ventas[Cantidades] = Ventas[Precios] >= 500
) //Usando esta function vamos a ignorar a los filtros externos

Para generar una Medida con resultado inamico ado un filtro externo podemos escribir entonces la siguiente expression

Importes Altos = CALCULATE (
	COUNTROWS(Ventas), 
	KEEPFILTERS( Ventas[Cantidades] = Ventas[Pedidos] >= 500 )
)









	Buenas prácticas: *******************************************************

Escribimos el nombre de la tabla y luego el de la columna entre corchetes: Tabla1[Columna1]

Comentarios: //Este es un comentario simple dentro de la caja de texto de DAX












	Expresiones aprendidas y usadas: *******************************************************

IN: Sirve para trabajar con conjuntos
NOT: Negación

Funciones e Agregaciòn:
SUM
MIN		(Tabla1[Columna1])
MAX
COUNT
AVERAGE

Agregados especiales
SUM - Solamente nos permite un argumento que es una tabla
SUMX - Nos permite una tabla y una expression como argumento - DEVUELVE LA SUMA DE UNA EXPRESION EVALUADA PARA CADA FILA DE UNA TABLA 
Ejemplo- Calcular la suma de la multiplicación final (Semisuma)
SUMX(Tabla_a_Recorrer, Expresion)
Importes = SUMX(Ventas, Ventas[Cantidades] + Ventas[Precios])

Es posible que se quiera hacer uso de esta ultima función pero teniendo una relación entre dos o más tablas separadas. Para ello es necesario tener en consideración lo siguiente: 
Es necesario conocer el sentido de la información
Caso: Ventas[Contidades] MaU Producto[Precio Catalogo]
Con esto podemos sacar la siguiente DAX formula

Importe Catalogo = SUMX(Ventas, Ventas[Cantidades] * RELATED(Producto[Precio Catalogo]))

DIVIDE(Numerador, Denominador, Valor si es Blank) //Ayuda a no tener errores si el divisor es =0
DEVIDE(10, 2) //== 5
DEVIDE(10, 0, 0) // == 0

Para obtener el ranking u orden de los elementos podemos hacer uso de:
RANKX(Tabla que integra, Funcion a evaluar, (Opcional) Orden [ASC o DESC])
Ejemplo
RANKX(
	ALL(Tabla[Columna]), 
	[Suma precio]
)
NOTA: Los datos tienen que ya estar ordenados de tal forma que el 1 corresponda con el precio más bajo y el 10 corresponda con el mayor, es importante tener esto en cuenta ya que de no ser así, podemos tener varios inconvenientees a la hora de hacer el ordenamiento



















